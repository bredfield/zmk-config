#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer aliases
#define COL 0
#define NAV 1
#define SYM 2
#define FUN 3
#define KEY 4

// Desktop and tab navigation shortcuts
#define SS_TARGETED &kp LG(LS(N4))
#define SS_FULL     &kp LG(LS(N3))
#define WIN_LEFT    &kp LA(LC(LEFT))
#define WIN_RIGHT   &kp LA(LC(RIGHT))
#define WIN_FULL    &kp LA(LC(RET))
#define RDO         &kp LS(LG(Z))
#define U_PST       &kp LG(V)
#define U_CPY       &kp LG(C)
#define U_CUT       &kp LG(X)
#define UND         &kp LG(Z)
#define QUIT        &kp LG(Q)
#define CLOSE       &kp LG(W)
#define APP_SWAP    &kp LG(TAB)
#define WIN_SWAP    &kp LG(GRAVE)
#define ALFRED      &kp LG(SPC)
#define DUPLICATE   &kp LG(D)

#include "30-key-combos.dtsi"

&caps_word {
    continue-list = <BACKSPACE UNDERSCORE MINUS N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

&sk {
  release-after-ms = <60000>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};


/ {
    behaviors {
        ZMK_MACRO(codeblock,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE>;
        )
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            label = "COL";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp X         &kp W         &kp F         &kp P         &kp B             &kp M         &kp L         &kp U         &kp Y         &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp A         &kp R         &kp S         &kp T         &kp G             &kp K         &kp N         &kp E         &kp I         &kp O     
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                   &kp V         &kp C         &kp D                                         &kp H         &kp COMMA     &kp DOT             
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &mo NAV       &kp SPC           &sk LSHIFT    &mo SYM 
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };   

        nav_layer {
            label = "NAV";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     QUIT          CLOSE         APP_SWAP      DUPLICATE     &kp E             &kp PG_UP     &kp LS(TAB)   &kp UP        &kp TAB       &kp HOME
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &sk LGUI      &sk LALT      &sk LCTRL     &sk LSHFT     &kp SPC           &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &kp END         
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                   SS_TARGETED   SS_FULL       ALFRED                                        &kp BSPC      &kp RET       &kp DEL                         
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &none          &none             &trans       &trans
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp EQUAL      &kp N7        &kp N8        &kp N9       &kp BSLH          &none         &kp COMMA     &kp DOT       codeblock    &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp MINUS      &kp N1        &kp N2        &kp N3       &kp GRAVE         &none         &sk RSHFT     &sk RCTRL     &sk RALT     &sk RGUI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    &kp N4        &kp N5        &kp N6                                       &none         &none         &none               
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                &kp N0       &trans            &trans        &trans
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp F10       &kp F7        &kp F8        &kp F9        &kp F12           &kp C_VOL_UP  &kp C_PREV    &kp C_PP      &kp C_NEXT    &C_MUTE
// ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp F11       &kp F1        &kp F2        &kp F3        &none             &kp C_VOL_DN  &sk RSHFT     &sk RCTRL     &sk RALT      &sk RGUI
// ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                   &kp F4        &kp F5        &kp F6                                        &none         &to KEY       &none                     
// ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &none         &none              &trans       &trans
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    
        function_layer {
            label = "KEY";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &bt BT_CLR    &none         &none         &none         &reset             &reset        &none        &none        &none        &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤
     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bootloader        &bootloader   &none        &none        &none        &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤
                   &none         &none         &none                                          &none        &none        &none                     
// ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &none         &none              &trans        &trans
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};

