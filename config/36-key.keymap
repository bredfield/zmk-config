#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer aliases
#define COL 0
#define ALT  1
#define NAV 2
#define SYM 3
#define FUN 4
#define KEY 5

// Desktop and tab navigation shortcuts
#define SS_TARGETED &kp LG(LS(N4))
#define SS_FULL     &kp LG(LS(N3))
#define WIN_LEFT    &kp LA(LC(LEFT))
#define WIN_RIGHT   &kp LA(LC(RIGHT))
#define WIN_FULL    &kp LA(LC(RET))
#define SELECT_ALL  &kp LG(A)
#define NEW_TAB     &kp LG(T)
#define UNTAB       &kp LS(TAB)
#define COMMAND     &kp LG(K)
#define U_UNDO      &kp LG(Z)
#define U_REDO      &kp LS(LG(Z))
#define U_PST       &kp LG(V)
#define U_CPY       &kp LG(C)
#define U_CUT       &kp LG(X)
#define QUIT        &kp LG(Q)
#define CLOSE       &kp LG(W)
#define APP_SWAP    &kp LG(TAB)
#define WIN_SWAP    &kp LG(GRAVE)
#define ALFRED      &kp LG(SPC)
#define DUPLICATE   &kp LG(D)

#define SK(KEY) &nk KEY KEY
#include "36-key-combos.dtsi"


&caps_word {
    continue-list = <BACKSPACE UNDERSCORE MINUS N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

&sk {
  release-after-ms = <60000>;
  quick-release;
};

&lt {
 tapping-term-ms = <150>;
 flavor = "balanced";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };
    };
};

/ {
    behaviors {
        ZMK_MACRO(codeblock,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp GRAVE &kp GRAVE &kp GRAVE>;
        )

        ZMK_MACRO(mo_nav,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
            = <&macro_tap &kp K_CANCEL>
            , <&macro_press &mo NAV>
            , <&macro_pause_for_release>
            , <&macro_release &mo NAV>;
        )

        ZMK_MACRO(mo_sym,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
            = <&macro_tap &kp K_CANCEL>
            , <&macro_press &mo SYM>
            , <&macro_pause_for_release>
            , <&macro_release &mo SYM>;
        )

        // Sticky key on tap, normal key on hold
        // Useful for modifier-clicking without the modifier remaining active
        nk: not_so_sticky_key {
            compatible = "zmk,behavior-hold-tap";
            label = "NOT_SO_STICKY_KEY";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sk>;
        };

        lal: layer-alpha {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_ALPHA";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            label = "COL";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp A         &kp R         &kp S         &kp T         &kp G             &kp M         &kp N         &kp E         &kp I         &kp O     
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp Z         &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &kp COMMA     &kp DOT       &kp SLASH              
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &mo_nav       &lt NAV SPC   &key_repeat       &key_repeat   &sk LSHIFT    &mo_sym 
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
 
    // APTex-DH
    alt_layer {
            label = "ALT";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp MINUS     &kp W         &kp M         &kp V         &kp Q             &kp Z         &kp Y         &kp O         &kp U         &kp SEMI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp R         &kp S         &kp T         &kp H         &kp B             &kp P         &kp N         &kp A         &kp I         &kp L
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp X         &kp C         &kp G         &kp D         &kp K             &kp J         &kp F         &kp SQT       &kp COMMA     &kp DOT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &sk LSHIFT    &lal NAV SPC  &key_repeat       &key_repeat   &mt LSHIFT E  &mo_sym 
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp ESC       CLOSE         APP_SWAP      ALFRED        NEW_TAB           &kp PG_UP     &kp DEL       &kp UP        DUPLICATE     &kp HOME
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     SK(LGUI)      SK(LALT)      SK(LCTRL)     SK(LSHFT)     SS_TARGETED       &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &kp END         
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     U_UNDO        U_CPY         U_CUT         U_PST         U_REDO            COMMAND       &kp BSPC      &kp RET       &kp TAB       UNTAB                             
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &trans        &trans        &trans             &trans       &kp SPC       &trans
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp EQUAL      &kp N7        &kp N8        &kp N9       &none             &none         &kp AMPS      &kp PIPE      &kp GRAVE     &kp TILDE
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼──────────────┼─────────────┼────────────┼─────────────┤
     &kp PLUS       &kp N4        &kp N5        &kp N6       &kp COMMA         &kp STAR      SK(RSHFT)     SK(RCTRL)     SK(RALT)      SK(RGUI)
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none          &kp N1        &kp N2        &kp N3       &kp DOT           &kp BSLH      &kp HASH      &kp SEMI      &kp COLON     &none                 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                  &trans        &kp N0       &trans            &trans        &trans        &trans
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp F10       &kp F7        &kp F8        &kp F9        &none             &none         &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_MUTE
// ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp F11       &kp F1        &kp F2        &kp F3        &kp F12           &kp C_VOL_UP  SK(RSHFT)     SK(RCTRL)     SK(RALT)      SK(RGUI)
// ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &kp F4        &kp F5        &kp F6        &none             &kp C_VOL_DN  &to COL       &to ALT       &to KEY       &none                         
// ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &trans        &trans        &none             &none         &trans        &trans             
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    
        keyboard_layer {
            label = "KEY";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &bt BT_CLR    &none         &none         &none         &none              &none         &none        &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤
     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &reset             &reset        &none        &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼───────────┼─────────────┼───────────────┼─────────────┤
     &none         &none         &none         &none         &bootloader        &bootloader   &none        &none         &none         &none                        
// ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &to COL       &none         &none              &trans        &trans       &trans
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};

